/// <reference types="node" />
import { TTableSchema, TColumnDesc, TPrimitiveTypeEntry, TColumn } from '../../thrift/TCLIService_types';
export interface ArrowBatch {
    batches: Array<Buffer>;
    rowCount: number;
}
export declare function getSchemaColumns(schema?: TTableSchema): Array<TColumnDesc>;
export declare function convertThriftValue(typeDescriptor: TPrimitiveTypeEntry | undefined, value: any): any;
export declare function hiveSchemaToArrowSchema(schema?: TTableSchema): Buffer | undefined;
export declare function getColumnValue(column?: TColumn): import("../../thrift/TCLIService_types").TBoolColumn | import("../../thrift/TCLIService_types").TByteColumn | import("../../thrift/TCLIService_types").TI16Column | import("../../thrift/TCLIService_types").TI32Column | import("../../thrift/TCLIService_types").TI64Column | import("../../thrift/TCLIService_types").TDoubleColumn | import("../../thrift/TCLIService_types").TStringColumn | import("../../thrift/TCLIService_types").TBinaryColumn | undefined;
